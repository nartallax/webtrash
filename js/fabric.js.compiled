(function(entryPoint, entryFunction, packageCode, waitLoad, onPackageNotFound){
	"use strict";

	function modNormalize(name){
		var x = name, xx;
		while(true){
			xx = x.replace(/[^\/]+\/\.\.\//g, "");
			if(xx.length === x.length)
				break;
			x = xx;
		}
		while(true){
			xx = x.replace(/\.\//g, "");
			if(xx.length === x.length)
				break;
			x = xx;
		}
		return x;
	}

	function modDirname(name){
		return name.replace(/\/?[^\/]+$/, "");
	}

	function modJoin(){
		var result = [];
		for(var i = 0; i < arguments.length; i++){
			var x = arguments[i];
			(i === 0) || (x = x.replace(/^\//, ""));
			(i === arguments.length - 1) || (x = x.replace(/\/$/, ""));
			x && result.push(x);
		}
		return modNormalize(result.join("/"));
	}

	function resolveModuleName(base, name){
		return name.charAt(0) !== "."? name: modJoin(modDirname(base), name)
	}

	var knownPackages = {
		require: function(name){
			return onPackageNotFound(name);
		}
	}

	function run(){
		var currentPackage = null;

		if("tslib" in packageCode){
			(function(){
				var global = {};
				var window = global;
				var self = global;
				eval(packageCode.tslib);
				if(typeof(global.__awaiter) !== "function"){
					throw new Error("TSLib corrupted.");
				}
				knownPackages.tslib = global;
			})();
		}
		
		function define(reqs, fn){
			var name = currentPackage;
			var pkgs = [];
			var result = null;
			for(var i = 0; i < reqs.length; i++){
				var r = resolveModuleName(name, reqs[i]);
				pkgs.push(r === "exports"? (result = {}): getPackage(r));
			}
			fn.apply(null, pkgs);
			knownPackages[name] = result;
		}
		define.amd = true;

		function getPackage(name){
			if(name in knownPackages)
				return knownPackages[name];
			var code = packageCode[name];
			if(!code)
				return onPackageNotFound(name);
			currentPackage = name;
			try {
				eval(code + "\n//# sourceURL=" + name)
			} catch(e){
				if(typeof(packageEvalExceptionHandler) !== "undefined"){
					packageEvalExceptionHandler(e, name);
				}
				throw e;
			}
			
			return knownPackages[name];
		}

		getPackage(entryPoint)[entryFunction].call(null);
	}
	
	waitLoad(run);
})(
"fabric/fabric",
"fabricMain",
{
"fabric/fabric":"define([\"require\", \"exports\", \"./fabric_sheet\"], function (require, exports, fabric_sheet_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    async function fabricMain() {\n        let title = document.querySelector(\"title\");\n        title && (title.textContent = \"Fabric\");\n        let sheet = new fabric_sheet_1.FabricSheet({\n            width: document.body.clientWidth,\n            height: document.body.clientHeight,\n            xMargin: document.body.clientWidth * 0.10,\n            yMargin: document.body.clientHeight * 0.10\n        });\n        document.body.appendChild(sheet.root);\n        sheet.start();\n    }\n    exports.fabricMain = fabricMain;\n});\n",
"fabric/fabric_sheet":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function sqrDist(a, b) {\n        let dx = a.x - b.x;\n        let dy = a.y - b.y;\n        return (dx * dx) + (dy * dy);\n    }\n    class FabricSheet {\n        constructor(opts) {\n            this.xCellCount = 20;\n            this.yCellCount = 20;\n            this.els = [];\n            this.diffs = [];\n            this.points = [];\n            this.oldUpHandler = null;\n            this.draggedPoint = null;\n            this.running = false;\n            this.width = opts.width;\n            this.height = opts.height;\n            this.xMargin = opts.xMargin;\n            this.yMargin = opts.yMargin;\n            this.cellWidth = (opts.width - (opts.xMargin * 2)) / this.xCellCount;\n            this.cellHeight = (opts.height - (opts.yMargin * 2)) / this.yCellCount;\n            let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n            svg.setAttribute(\"width\", this.width + \"\");\n            svg.setAttribute(\"height\", this.height + \"\");\n            svg.setAttribute(\"x\", \"0\");\n            svg.setAttribute(\"y\", \"0\");\n            svg.setAttribute(\"viewBox\", \"0 0 \" + this.width + \" \" + this.height);\n            svg.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n            this.root = svg;\n        }\n        createEl(top) {\n            let res = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n            res.setAttribute(\"stroke\", \"#444\");\n            res.setAttribute(\"stroke-width\", \"0.01\");\n            res.setAttribute(\"fill\", \"none\");\n            res.setAttribute(\"d\", top ? \"M 0 0 L 0 1 L 1 0 z\" : \"M 0 0 L -1 0 L 0 -1 z\");\n            return res;\n        }\n        generateEls() {\n            this.root.innerHTML = \"\";\n            this.els = [];\n            for (let x = 0; x < this.xCellCount - 1; x++) {\n                let column = [];\n                this.els.push(column);\n                for (let y = 0; y < this.yCellCount - 1; y++) {\n                    let top = this.createEl(true);\n                    this.root.appendChild(top);\n                    let bottom = this.createEl(false);\n                    this.root.appendChild(bottom);\n                    column.push([top, bottom]);\n                }\n            }\n        }\n        generatePoints() {\n            let w = this.width - (this.xMargin * 2);\n            let h = this.height - (this.yMargin * 2);\n            this.points = [];\n            this.diffs = [];\n            for (let x = 0; x < this.xCellCount; x++) {\n                let column = [];\n                this.points.push(column);\n                let diffCol = [];\n                this.diffs.push(diffCol);\n                let xVal = w * (x / (this.xCellCount - 1)) + this.xMargin;\n                for (let y = 0; y < this.yCellCount; y++) {\n                    column.push({\n                        x: xVal,\n                        y: h * (y / (this.yCellCount - 1)) + this.yMargin\n                    });\n                    diffCol.push({ x: 0, y: 0 });\n                }\n            }\n        }\n        generateTransform(corner, topRight, bottomLeft, top) {\n            if (top) {\n                let h = bottomLeft.y - corner.y;\n                let w = topRight.x - corner.x;\n                let dx = bottomLeft.x - corner.x;\n                let dy = topRight.y - corner.y;\n                return `matrix(${w} ${dy} ${dx} ${h} ${corner.x} ${corner.y})`;\n            }\n            else {\n                let h = corner.y - bottomLeft.y;\n                let w = corner.x - topRight.x;\n                let dx = corner.x - bottomLeft.x;\n                let dy = corner.y - topRight.y;\n                return `matrix(${w} ${dy} ${dx} ${h} ${corner.x} ${corner.y})`;\n            }\n        }\n        setTransforms() {\n            for (let x = 0; x < this.xCellCount - 1; x++) {\n                let elCol = this.els[x];\n                for (let y = 0; y < this.yCellCount - 1; y++) {\n                    let topLeft = this.points[x][y];\n                    let topRight = this.points[x + 1][y];\n                    let bottomLeft = this.points[x][y + 1];\n                    let bottomRight = this.points[x + 1][y + 1];\n                    let [topEl, bottomEl] = elCol[y];\n                    topEl.setAttribute(\"transform\", this.generateTransform(topLeft, topRight, bottomLeft, true));\n                    bottomEl.setAttribute(\"transform\", this.generateTransform(bottomRight, topRight, bottomLeft, false));\n                }\n            }\n        }\n        resolveTensions() {\n            void this.cellWidth;\n            void this.cellHeight;\n            for (let x = 1; x < this.xCellCount - 1; x++) {\n                for (let y = 1; y < this.yCellCount - 1; y++) {\n                    let d = this.diffs[x][y];\n                    let p = this.points[x][y];\n                    if (p === this.draggedPoint) {\n                        d.x = 0;\n                        d.y = 0;\n                        continue;\n                    }\n                    let top = this.points[x][y - 1];\n                    let bottom = this.points[x][y + 1];\n                    let left = this.points[x - 1][y];\n                    let right = this.points[x + 1][y];\n                    d.x = ((right.x - p.x) + (left.x - p.x) + (top.x - p.x) + (bottom.x - p.x)) / 4;\n                    d.y = ((right.y - p.y) + (left.y - p.y) + (bottom.y - p.y) + (top.y - p.y)) / 4;\n                }\n            }\n            for (let x = 1; x < this.xCellCount - 1; x++) {\n                for (let y = 1; y < this.yCellCount - 1; y++) {\n                    let d = this.diffs[x][y];\n                    let p = this.points[x][y];\n                    p.x += d.x / 2;\n                    p.y += d.y / 2;\n                }\n            }\n        }\n        findNearestPoint(coords) {\n            let minX = 0, minY = 0, minDist = Number.MAX_SAFE_INTEGER;\n            for (let x = 0; x < this.xCellCount; x++) {\n                let col = this.points[x];\n                for (let y = 0; y < this.yCellCount; y++) {\n                    let dist = sqrDist(coords, col[y]);\n                    if (dist < minDist) {\n                        minDist = dist;\n                        minX = x;\n                        minY = y;\n                    }\n                }\n            }\n            return [minX, minY];\n        }\n        getDownHandler() {\n            return e => {\n                let coords = this.eventCoords(e);\n                let [grabPointX, grabPointY] = this.findNearestPoint(coords);\n                let point = this.draggedPoint = this.points[grabPointX][grabPointY];\n                let dx = point.x - coords.x;\n                let dy = point.y - coords.y;\n                let moveHandler = (e) => {\n                    if (!e.touches && !e.buttons) {\n                        upHandler();\n                        return;\n                    }\n                    let coords = this.eventCoords(e);\n                    point.x = coords.x + dx;\n                    point.y = coords.y + dy;\n                };\n                if (this.oldUpHandler) {\n                    this.oldUpHandler();\n                }\n                let upHandler = this.oldUpHandler = () => {\n                    this.oldUpHandler = null;\n                    this.draggedPoint = null;\n                    this.root.removeEventListener(\"mouseup\", upHandler);\n                    this.root.removeEventListener(\"touchend\", upHandler);\n                    this.root.removeEventListener(\"mousemove\", moveHandler);\n                    this.root.removeEventListener(\"touchmove\", moveHandler);\n                };\n                this.root.addEventListener(\"mouseup\", upHandler);\n                this.root.addEventListener(\"touchend\", upHandler);\n                this.root.addEventListener(\"mousemove\", moveHandler);\n                this.root.addEventListener(\"touchmove\", moveHandler);\n            };\n        }\n        eventCoords(e) {\n            if (e.touches) {\n                let touches = e.touches;\n                if (touches.length < 1) {\n                    throw new Error(\"No touches in touch event!\");\n                }\n                return { x: touches[0].clientX, y: touches[0].clientY };\n            }\n            else {\n                let me = e;\n                return { x: me.clientX, y: me.clientY };\n            }\n        }\n        start() {\n            this.generateEls();\n            this.generatePoints();\n            this.setTransforms();\n            let downHandler = this.getDownHandler();\n            this.root.addEventListener(\"mousedown\", downHandler);\n            this.root.addEventListener(\"touchstart\", downHandler);\n            this.running = true;\n            let doIteration = () => {\n                if (!this.running) {\n                    this.root.removeEventListener(\"mousedown\", downHandler);\n                    this.root.removeEventListener(\"touchstart\", downHandler);\n                    return;\n                }\n                this.resolveTensions();\n                this.setTransforms();\n                requestAnimationFrame(doIteration);\n            };\n            requestAnimationFrame(doIteration);\n        }\n        stop() {\n            this.running = false;\n        }\n    }\n    exports.FabricSheet = FabricSheet;\n});\n",
"tslib":"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n});\r\n"
},
(function(cb){
	var interval = null;
	var loaded = false;
	
	var wcb = function(){
		if(loaded)
			return;
		loaded = true;
		if(interval)
			clearInterval(interval);
		cb();
	}
	
	var checkState = function(){
		if(document && (document.readyState === "interactive" || document.readyState === "complete"))
			wcb();
	}
	
	window.addEventListener("load", wcb);
	document.addEventListener("load", wcb);
	document.addEventListener("readystatechange", checkState);
	interval = setInterval(checkState, 10);
	checkState();
}),
(function(r){throw new Error("Package is not defined by the time it is requested: \"" + r + "\" (or requested directly, which is also forbidden).")})
);